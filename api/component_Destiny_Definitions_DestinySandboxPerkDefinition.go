// This file was generated by https://github.com/taiidani/go-bungie-api/generate.
// DO NOT EDIT THIS FILE.
package api

type Destiny_Definitions_DestinySandboxPerkDefinition struct {
    // DamageType.
    //
    // If this perk grants a damage type to a weapon, the damage type will be defined here.
    //
    // Unless you have a compelling reason to use this enum value, use the damageTypeHash instead to look up the actual DestinyDamageTypeDefinition.
    DamageType int32 `json:"damageType"`

    // DamageTypeHash.
    //
    // The hash identifier for looking up the DestinyDamageTypeDefinition, if this perk has a damage type.
    //
    // This is preferred over using the damageType enumeration value, which has been left purely because it is occasionally convenient.
    DamageTypeHash *uint32 `json:"damageTypeHash"`

    // DisplayProperties.
    //
    // These display properties are by no means guaranteed to be populated. Usually when it is, it's only because we back-filled them with the displayProperties of some Talent Node or Plug item that happened to be uniquely providing that perk.
    DisplayProperties any `json:"displayProperties"`

    // Hash.
    //
    // The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
    //
    // When entities refer to each other in Destiny content, it is this hash that they are referring to.
    Hash uint32 `json:"hash"`

    // Index.
    //
    // The index of the entity as it was found in the investment tables.
    Index int32 `json:"index"`

    // IsDisplayable.
    //
    // If true, you can actually show the perk in the UI. Otherwise, it doesn't have useful player-facing information.
    IsDisplayable bool `json:"isDisplayable"`

    // PerkIdentifier.
    //
    // The string identifier for the perk.
    PerkIdentifier string `json:"perkIdentifier"`

    // Redacted.
    //
    // If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    Redacted bool `json:"redacted"`
}
