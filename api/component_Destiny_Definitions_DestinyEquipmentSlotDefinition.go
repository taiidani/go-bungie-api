// This file was generated by https://github.com/taiidani/go-bungie-api/generate.
// DO NOT EDIT THIS FILE.
package api

type Destiny_Definitions_DestinyEquipmentSlotDefinition struct {
    // ApplyCustomArtDyes.
    //
    // If True, equipped items should have their custom art dyes applied when rendering the item. Otherwise, custom art dyes on an item should be ignored if the item is equipped in this slot.
    ApplyCustomArtDyes bool `json:"applyCustomArtDyes"`

    // ArtDyeChannels.
    //
    // The Art Dye Channels that apply to this equipment slot.
    ArtDyeChannels []Destiny_Definitions_DestinyArtDyeReference `json:"artDyeChannels"`

    // BucketTypeHash.
    //
    // The inventory bucket that owns this equipment slot.
    BucketTypeHash uint32 `json:"bucketTypeHash"`

    // DisplayProperties.
    //
    // Many Destiny*Definition contracts - the "first order" entities of Destiny that have their own tables in the Manifest Database - also have displayable information. This is the base class for that display information.
    DisplayProperties Destiny_Definitions_Common_DestinyDisplayPropertiesDefinition `json:"displayProperties"`

    // EquipmentCategoryHash.
    //
    // These technically point to "Equipment Category Definitions". But don't get excited. There's nothing of significant value in those definitions, so I didn't bother to expose them. You can use the hash here to group equipment slots by common functionality, which serves the same purpose as if we had the Equipment Category definitions exposed.
    EquipmentCategoryHash uint32 `json:"equipmentCategoryHash"`

    // Hash.
    //
    // The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
    //
    // When entities refer to each other in Destiny content, it is this hash that they are referring to.
    Hash uint32 `json:"hash"`

    // Index.
    //
    // The index of the entity as it was found in the investment tables.
    Index int32 `json:"index"`

    // Redacted.
    //
    // If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    Redacted bool `json:"redacted"`
}
